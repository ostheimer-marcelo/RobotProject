# .github/workflows/robot_framework_ci.yml

name: Executar Testes Robot Framework

# Gatilhos: Define QUANDO esta ação deve rodar
on:
  # Roda toda vez que houver um push (commit enviado) na branch 'main'
  push:
    branches: [ main ]
  # Roda também quando um Pull Request for aberto ou atualizado para a branch 'main'
  pull_request:
    branches: [ main ]
  # Adiciona um gatilho manual para podermos rodar quando quisermos
  workflow_dispatch:

# Trabalhos (Jobs): Define O QUE deve ser feito
jobs:
  test:
    # Define que o trabalho vai rodar na versão mais recente do Ubuntu Linux
    runs-on: ubuntu-latest

    # Passos (Steps): A sequência de ações a serem executadas
    steps:
      # Passo 1: Usa a versão v4 do checkout, a mais recente e estável
      - name: 1. Baixar o código do repositório
        uses: actions/checkout@v4

      # Passo 2: Usa a versão v5 do setup-python
      - name: 2. Configurar o Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Passo 3: Instalar as dependências do projeto
      - name: 3. Instalar as dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Passo 4: Executar a suíte de testes completa do Robot Framework
      - name: 4. Executar os testes Robot
        run: python -m robot --variable BROWSER:Chrome -d results tests/

      # Passo 5: Usa a versão v4 do upload-artifact para salvar os relatórios
      - name: 5. Fazer upload dos relatórios
        if: always() # Este passo sempre roda, mesmo se os testes falharem
        uses: actions/upload-artifact@v4
        with:
          # Nome do "pacote" de artefatos que será gerado
          name: robot-framework-reports
          # Caminho da pasta que queremos salvar
          path: results/